{"version":3,"sources":["js/openclose.js"],"names":["classList","e","CSSClassList","do_onoff","hdr","item","document","getElementById","e2","style","display","remove","add","open_close","addEventListener","contains","OCisSmartPhone","navigator","userAgent","indexOf","OCdisplayWidth","window","parent","screen","width","OCwindowWidth","innerWidth","prototype","c","length","Error","classes","className","search","pattern","RegExp","replace","toggle","toString","toArray","match"],"mappings":";AAeA,SAASA,EAAUC,GACXA,OAAAA,EAAED,UAAkBC,EAAED,UACd,IAAIE,EAAaD,GAIjC,SAASC,EAAaD,GAAUA,KAAAA,EAAIA,EAwDpC,SAASE,EAASC,EAAKC,GAElBJ,IAAAA,EAAIK,SAASC,eAAeH,GAC5BI,EAAKF,SAASC,eAAeF,GACT,QAApBG,EAAGC,MAAMC,SACZF,EAAGC,MAAMC,QAAU,GACnBV,EAAUC,GAAGU,OAAO,SACpBX,EAAUC,GAAGW,IAAI,UAEjBJ,EAAGC,MAAMC,QAAU,OACnBV,EAAUC,GAAGU,OAAO,QACpBX,EAAUC,GAAGW,IAAI,UAGnB,SAASC,EAAWT,EAAKC,GAEpBJ,IAAAA,EAAIK,SAASC,eAAeH,GAC5BI,EAAKF,SAASC,eAAeF,GACjCJ,EAAEa,iBAAiB,QAAS,WAAaX,EAASC,EAAKC,KAAU,GAEjEL,EAAUC,GAAGU,OAAO,QACpBX,EAAUC,GAAGW,IAAI,SACbZ,EAAUC,GAAGc,SAAS,UAEzBP,EAAGC,MAAMC,QAAU,IAEhBV,EAAUC,GAAGc,SAAS,WAEzBP,EAAGC,MAAMC,QAAU,QAIrB,SAASM,IAGNC,OAAAA,UAAUC,UAAUC,QAAQ,UAAY,IAA6C,GAAxCF,UAAUC,UAAUC,QAAQ,SAC1EF,UAAUC,UAAUC,QAAQ,QAAU,GACtCF,UAAUC,UAAUC,QAAQ,WAAa,EAE3C,SAASC,IAEDC,OAAAA,OAAOC,OAAOC,OAAOC,MAE7B,SAASC,IAEJJ,OAAAA,OAAOE,OAAOC,MAAQH,OAAOK,WACzBL,OAAOE,OAAOC,MAEfH,OAAOK,WArGfxB,EAAayB,UAAUZ,SAAW,SAASa,GAEnCA,GAAa,IAAbA,EAAEC,SAAmC,GAAnBD,EAAET,QAAQ,KAC5B,MAAM,IAAIW,MAAM,wBAA0BF,EAAI,KAE9CG,IAAAA,EAAU,KAAK9B,EAAE+B,UACjB,QAACD,IACDA,IAAYH,IAI6B,GAAtCG,EAAQE,OAAO,MAAQL,EAAI,SAItC1B,EAAayB,UAAUf,IAAM,SAASgB,GAC9B,IAAA,KAAKb,SAASa,GAAd,CACAG,IAAAA,EAAU,KAAK9B,EAAE+B,UACjBD,GAAwC,KAA7BA,EAAQA,EAAQF,OAAO,KAClCD,EAAI,IAAMA,GACT3B,KAAAA,EAAE+B,WAAaJ,IAIxB1B,EAAayB,UAAUhB,OAAS,SAASiB,GAEjCA,GAAa,IAAbA,EAAEC,SAAmC,GAAnBD,EAAET,QAAQ,KAC5B,MAAM,IAAIW,MAAM,wBAA0BF,EAAI,KAE9CM,IAAAA,EAAU,IAAIC,OAAO,MAAQP,EAAI,UAAW,KAC3C3B,KAAAA,EAAE+B,UAAY,KAAK/B,EAAE+B,UAAUI,QAAQF,EAAS,KAKzDhC,EAAayB,UAAUU,OAAS,SAAST,GACjC,OAAA,KAAKb,SAASa,IACTjB,KAAAA,OAAOiB,IACL,IAGFhB,KAAAA,IAAIgB,IACF,IAKf1B,EAAayB,UAAUW,SAAW,WAAoB,OAAA,KAAKrC,EAAE+B,WAG7D9B,EAAayB,UAAUY,QAAU,WACtB,OAAA,KAAKtC,EAAE+B,UAAUQ,MAAM,aAAe","file":"openclose.c4049a17.js","sourceRoot":"..","sourcesContent":["/*\r\n * �u���b�N�J����\r\n * 2015/12/21 �{�^���摜�̔�\\���������s��Ȃ�\r\n */\r\n/*\r\n * Return the classList property of e, if it has one.\r\n * Otherwise, return an object that simulates the DOMTokenList API for e.\r\n * The returned object has contains(), add(), remove(), toggle() and toString()\r\n * methods for testing and altering the set of classes of the element e.\r\n * If the classList property is natively supported, the returned object is\r\n * array-like and has length and array index properties. The simulated\r\n * DOMTokenList is not array-like, but has a toArray() method that returns\r\n * a true-array snapshot of the element's class names.\r\n */\r\n\r\nfunction classList(e) {\r\n    if (e.classList) return e.classList;   // Return e.classList if it exists\r\n    else return new CSSClassList(e);       // Otherwise try to fake it\r\n}\r\n\r\n// CSSClassList is a JavaScript class that simulates DOMTokenList\r\nfunction CSSClassList(e) { this.e = e; }\r\n\r\n// Return true if e.className contains the class c, false otherwise\r\nCSSClassList.prototype.contains = function(c) {\r\n    // Check that c is a valid class name\r\n    if (c.length === 0 || c.indexOf(\" \") != -1) \r\n        throw new Error(\"Invalid class name: '\" + c + \"'\");\r\n    // Check common cases first\r\n    var classes = this.e.className;\r\n    if (!classes) return false;       // e has no classes at all\r\n    if (classes === c) return true;   // e has one class that matches exactly\r\n    \r\n    // Otherwise, use a RegExp to search for c as a word by itself\r\n    // \\b in a regular expression requires a match at a word boundary.\r\n    return classes.search(\"\\\\b\" + c + \"\\\\b\") != -1;\r\n};\r\n\r\n// Add c to the e.className if it is not already present\r\nCSSClassList.prototype.add = function(c) {\r\n    if (this.contains(c)) return;            // Do nothing if already present\r\n    var classes = this.e.className;\r\n    if (classes && classes[classes.length-1] != \" \")\r\n        c = \" \" + c;                         // Add a space if we need one\r\n    this.e.className += c;                   // Add c to the className\r\n};\r\n\r\n// Remove all occurrences of c from e.className\r\nCSSClassList.prototype.remove = function(c) {\r\n    // Make sure c is a valid class name\r\n    if (c.length === 0 || c.indexOf(\" \") != -1) \r\n        throw new Error(\"Invalid class name: '\" + c + \"'\");\r\n    // Remove all occurances of c as a word, plus any trailing space\r\n    var pattern = new RegExp(\"\\\\b\" + c + \"\\\\b\\\\s*\", \"g\");\r\n    this.e.className = this.e.className.replace(pattern, \"\");\r\n};\r\n\r\n// Add c to e.className if it is not already present and return true.\r\n// Otherwise, remove all occurrences of c from e.className and return false.\r\nCSSClassList.prototype.toggle = function(c) {\r\n    if (this.contains(c)) {  // If e.className contains c\r\n        this.remove(c);      // then remove it.\r\n        return false;\r\n    }\r\n    else {                   // Otherwise:\r\n        this.add(c);         // add it.\r\n        return true;\r\n    }\r\n};\r\n\r\n// Return e.className itself\r\nCSSClassList.prototype.toString = function() { return this.e.className; };\r\n\r\n// Return of the names in e.className\r\nCSSClassList.prototype.toArray = function() {\r\n    return this.e.className.match(/\\b\\w+\\b/g) || [];\r\n};\r\nfunction do_onoff(hdr, item)\r\n{\r\n\tvar e = document.getElementById(hdr);\r\n\tvar e2 = document.getElementById(item);\r\n\tif (e2.style.display == 'none') {\r\n\t\te2.style.display = '';\r\n\t\tclassList(e).remove('close');\r\n\t\tclassList(e).add('open');\r\n\t} else {\r\n\t\te2.style.display = 'none';\r\n\t\tclassList(e).remove('open');\r\n\t\tclassList(e).add('close');\r\n\t}\r\n}\r\nfunction open_close(hdr, item)\r\n{\r\n\tvar e = document.getElementById(hdr);\r\n\tvar e2 = document.getElementById(item);\r\n\te.addEventListener(\"click\", function() { do_onoff(hdr, item); }, false);\r\n\r\n\tclassList(e).remove('open');\r\n\tclassList(e).add('close');\r\n\tif (classList(e).contains('open')) {\r\n//\t\te.style.display = '';\r\n\t\te2.style.display = '';\r\n\t}\r\n\tif (classList(e).contains('close')) {\r\n//\t\te.style.display = '';\r\n\t\te2.style.display = 'none';\r\n\t}\r\n\r\n}\r\nfunction OCisSmartPhone()\r\n{\r\n\treturn (\r\n\t\t(navigator.userAgent.indexOf('iPhone') > 0 && navigator.userAgent.indexOf('iPad') == -1) || \r\n\t\tnavigator.userAgent.indexOf('iPod') > 0 || \r\n\t\tnavigator.userAgent.indexOf('Android') > 0);\r\n}\r\nfunction OCdisplayWidth()\r\n{\r\n\treturn window.parent.screen.width;\r\n}\r\nfunction OCwindowWidth()\r\n{\r\n\tif (window.screen.width < window.innerWidth) {\r\n\t\treturn window.screen.width;\r\n\t}\r\n\treturn window.innerWidth;\r\n}\r\n"]}